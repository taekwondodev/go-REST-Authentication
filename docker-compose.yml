services:
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: test
    profiles:
      - run-tests

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_SSLMODE=${DB_SSLMODE}
    depends_on:
      postgres:
        condition: service_healthy
  
  flyway:
    image: flyway/flyway:latest
    container_name: flyway
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL: ${POSTGRES_URL}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_CONNECT_RETRIES: 60
    volumes:
      - ./migrations:/flyway/sql
    restart: "no"
    command: migrate
  
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data: