name: Cleanup Old Releases

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get all tags and clean up old ones
        env:
          PACKAGE_NAME: "go-rest-auth"
          KEEP: 3
        run: |
          sudo apt-get -yq install jq

          TAGS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions" | \
            jq -r '.[] | select(.metadata.container.tags | length > 0) | .metadata.container.tags[] + " " + (.id|tostring)')

          VERSION_TAGS=$(echo "$TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+ ' | sort -V -r)

          OLD_TAGS=$(echo "$VERSION_TAGS" | tail -n +$(($KEEP + 1)))

          if [ -z "$OLD_TAGS" ]; then
            echo "No old tags to delete"
            exit 0
          fi

          echo "Deleting old tags:"
          echo "$OLD_TAGS"

          while read -r line; do
            tag=$(echo $line | awk '{print $1}')
            id=$(echo $line | awk '{print $2}')
            echo "Deleting $tag (ID: $id)"
            curl -X DELETE \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/users/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions/$id"
          done <<< "$OLD_TAGS"